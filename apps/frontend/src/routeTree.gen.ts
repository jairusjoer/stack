/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AppsSampleIndexRouteImport } from './routes/apps/sample/index'
import { Route as AppsSampleAboutRouteImport } from './routes/apps/sample/about'

const AppsSampleIndexRoute = AppsSampleIndexRouteImport.update({
  id: '/apps/sample/',
  path: '/apps/sample/',
  getParentRoute: () => rootRouteImport,
} as any)
const AppsSampleAboutRoute = AppsSampleAboutRouteImport.update({
  id: '/apps/sample/about',
  path: '/apps/sample/about',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/apps/sample/about': typeof AppsSampleAboutRoute
  '/apps/sample': typeof AppsSampleIndexRoute
}
export interface FileRoutesByTo {
  '/apps/sample/about': typeof AppsSampleAboutRoute
  '/apps/sample': typeof AppsSampleIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/apps/sample/about': typeof AppsSampleAboutRoute
  '/apps/sample/': typeof AppsSampleIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/apps/sample/about' | '/apps/sample'
  fileRoutesByTo: FileRoutesByTo
  to: '/apps/sample/about' | '/apps/sample'
  id: '__root__' | '/apps/sample/about' | '/apps/sample/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AppsSampleAboutRoute: typeof AppsSampleAboutRoute
  AppsSampleIndexRoute: typeof AppsSampleIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/apps/sample/': {
      id: '/apps/sample/'
      path: '/apps/sample'
      fullPath: '/apps/sample'
      preLoaderRoute: typeof AppsSampleIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/apps/sample/about': {
      id: '/apps/sample/about'
      path: '/apps/sample/about'
      fullPath: '/apps/sample/about'
      preLoaderRoute: typeof AppsSampleAboutRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  AppsSampleAboutRoute: AppsSampleAboutRoute,
  AppsSampleIndexRoute: AppsSampleIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
